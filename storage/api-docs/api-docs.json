{
    "openapi": "3.0.0",
    "info": {
        "title": "APIs For Thrift Store",
        "version": "1.0.0"
    },
    "paths": {
        "/api/avatar/create": {
            "post": {
                "tags": [
                    "Avatar"
                ],
                "summary": "Create an avatar",
                "description": "Endpoint to create and upload an avatar image.",
                "operationId": "createAvatar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Avatar image file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "profile_id": {
                                        "description": "Profile ID associated with the avatar",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Avatar created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "image": {
                                            "type": "string"
                                        },
                                        "profile_id": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/avatar/delete/{id}": {
            "delete": {
                "tags": [
                    "Avatar"
                ],
                "summary": "Delete an avatar",
                "description": "Endpoint to delete an avatar image by its ID.",
                "operationId": "deleteAvatar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "description": "ID of the avatar to be deleted",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Avatar deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid ID supplied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Avatar not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/comment/list": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Store a new comment",
                "description": "Stores a new comment",
                "operationId": "createComment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "example": "This is a comment."
                                    },
                                    "post_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/comment/create": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Store a new comment",
                "description": "Stores a new comment",
                "operationId": "storeComment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "example": "This is a comment."
                                    },
                                    "post_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/comment/show/{id}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Show a comment",
                "description": "Retrieves a comment",
                "operationId": "showComment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "example": "This is a comment."
                                    },
                                    "post_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/comment/update/{id}": {
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Update a comment",
                "description": "Updates an existing comment",
                "operationId": "updateComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "text": {
                                        "type": "string",
                                        "example": "This is an updated comment."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/comment/delete/{id}": {
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a comment",
                "description": "Deletes an existing comment",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Comment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/emoji/list": {
            "get": {
                "tags": [
                    "Emoji"
                ],
                "summary": "List emojis",
                "description": "Endpoint to retrieve a list of emojis.",
                "operationId": "listEmojis",
                "responses": {
                    "200": {
                        "description": "List of emojis retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "url": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/emoji/create": {
            "post": {
                "tags": [
                    "Emoji"
                ],
                "summary": "Create an emoji",
                "description": "Endpoint to create and upload an emoji image.",
                "operationId": "createEmoji",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "image",
                                    "name"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Emoji image file",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "name": {
                                        "description": "Name of the emoji",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Emoji created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "smiley"
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "https://example.com/emojis/smiley.png"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/emoji/update/{id}": {
            "put": {
                "tags": [
                    "Emoji"
                ],
                "summary": "Update an emoji",
                "description": "Endpoint to update an existing emoji.",
                "operationId": "updateEmoji",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "description": "ID of the emoji to be updated",
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "New emoji image file (optional)",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "name": {
                                        "description": "New name of the emoji",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Emoji updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "smiley"
                                        },
                                        "url": {
                                            "type": "string",
                                            "example": "https://example.com/emojis/smiley.png"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Emoji not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/emoji/delete/{id}": {
            "delete": {
                "tags": [
                    "Emoji"
                ],
                "summary": "Delete an emoji",
                "description": "Endpoint to delete an existing emoji by ID.",
                "operationId": "deleteEmoji",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "description": "ID of the emoji to delete",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Emoji deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Emoji deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Emoji not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Emoji not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/like/list": {
            "get": {
                "tags": [
                    "Like"
                ],
                "summary": "List likes",
                "description": "Endpoint to retrieve a list of likes.",
                "operationId": "listLikes",
                "responses": {
                    "200": {
                        "description": "List of likes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "ID of the like",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "user_id": {
                                                "description": "ID of the user who liked",
                                                "type": "integer",
                                                "example": 101
                                            },
                                            "emoji_id": {
                                                "description": "ID of the emoji liked",
                                                "type": "integer",
                                                "example": 201
                                            },
                                            "created_at": {
                                                "description": "Date and time when the like was created",
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-17 12:34:56"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/like/create": {
            "post": {
                "tags": [
                    "Like"
                ],
                "summary": "Create a like",
                "description": "Endpoint to create a like on an item.",
                "operationId": "createLike",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "emoji_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the user who is liking the item",
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "emoji_id": {
                                        "description": "ID of the emoji to be liked",
                                        "type": "integer",
                                        "example": 201
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Like created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Like created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/like/delete/{id}": {
            "delete": {
                "tags": [
                    "Like"
                ],
                "summary": "Delete a like",
                "description": "Endpoint to delete a like by its ID.",
                "operationId": "deleteLike",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "description": "ID of the like to delete",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Like deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Like deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Like not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Like not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/post/create": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Create a new post",
                "description": "Endpoint to create a new post.",
                "operationId": "createPost",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "caption": {
                                        "description": "Caption of the post",
                                        "type": "string",
                                        "example": "New post caption"
                                    },
                                    "image": {
                                        "type": "array",
                                        "items": {
                                            "description": "URL of an image associated with the post",
                                            "type": "string",
                                            "example": "http://example.com/image.jpg"
                                        }
                                    },
                                    "video": {
                                        "type": "array",
                                        "items": {
                                            "description": "URL of a video associated with the post",
                                            "type": "string",
                                            "example": "http://example.com/video.mp4"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the created post",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "caption": {
                                            "description": "Caption of the post",
                                            "type": "string",
                                            "example": "New post caption"
                                        },
                                        "user_id": {
                                            "description": "ID of the user who created the post",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "description": "Timestamp when the post was created",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-01T00:00:00.000Z"
                                        },
                                        "updated_at": {
                                            "description": "Timestamp when the post was updated",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-01T00:00:00.000Z"
                                        },
                                        "images": {
                                            "description": "Images associated with the post",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "image_url": {
                                                        "description": "URL of the image",
                                                        "type": "string",
                                                        "example": "http://example.com/image.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "videos": {
                                            "description": "Videos associated with the post",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "video_url": {
                                                        "description": "URL of the video",
                                                        "type": "string",
                                                        "example": "http://example.com/video.mp4"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/post/show/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get a single post by ID",
                "description": "Endpoint to retrieve a single post by its ID.",
                "operationId": "getPostById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the post",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "caption": {
                                            "description": "Caption of the post",
                                            "type": "string",
                                            "example": "This is a post caption"
                                        },
                                        "user_id": {
                                            "description": "ID of the user who created the post",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "description": "Timestamp when the post was created",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-01T00:00:00.000Z"
                                        },
                                        "updated_at": {
                                            "description": "Timestamp when the post was updated",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-01T00:00:00.000Z"
                                        },
                                        "images": {
                                            "description": "Images associated with the post",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "image_url": {
                                                        "description": "URL of the image",
                                                        "type": "string",
                                                        "example": "http://example.com/image.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "videos": {
                                            "description": "Videos associated with the post",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "video_url": {
                                                        "description": "URL of the video",
                                                        "type": "string",
                                                        "example": "http://example.com/video.mp4"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/post/{id}": {
            "put": {
                "tags": [
                    "Post"
                ],
                "summary": "Update a post by ID",
                "description": "Endpoint to update a post by its ID.",
                "operationId": "updatePostById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "caption": {
                                        "description": "New caption for the post",
                                        "type": "string",
                                        "example": "Updated post caption"
                                    },
                                    "image": {
                                        "type": "array",
                                        "items": {
                                            "description": "URL of an image to add/update",
                                            "type": "string",
                                            "example": "http://example.com/new-image.jpg"
                                        }
                                    },
                                    "video": {
                                        "type": "array",
                                        "items": {
                                            "description": "URL of a video to add/update",
                                            "type": "string",
                                            "example": "http://example.com/new-video.mp4"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the updated post",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "caption": {
                                            "description": "Updated caption of the post",
                                            "type": "string",
                                            "example": "Updated post caption"
                                        },
                                        "user_id": {
                                            "description": "ID of the user who updated the post",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "description": "Timestamp when the post was created",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-01T00:00:00.000Z"
                                        },
                                        "updated_at": {
                                            "description": "Timestamp when the post was updated",
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-01-02T00:00:00.000Z"
                                        },
                                        "images": {
                                            "description": "Updated images associated with the post",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "image_url": {
                                                        "description": "URL of the updated image",
                                                        "type": "string",
                                                        "example": "http://example.com/new-image.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "videos": {
                                            "description": "Updated videos associated with the post",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "video_url": {
                                                        "description": "URL of the updated video",
                                                        "type": "string",
                                                        "example": "http://example.com/new-video.mp4"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete a post by ID",
                "description": "Endpoint to delete a post by its ID.",
                "operationId": "deletePostById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Post deleted successfully"
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile/create": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Create a profile",
                "description": "Endpoint to create a new user profile.",
                "operationId": "createProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "birthday",
                                    "place",
                                    "bio"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID of the profile",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "birthday": {
                                        "description": "Birth date for the user",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2006-06-06"
                                    },
                                    "place": {
                                        "description": "Place address of user",
                                        "type": "string",
                                        "example": "Pursat province"
                                    },
                                    "bio": {
                                        "description": "Biography or description of the user",
                                        "type": "string",
                                        "example": "Passionate about coding and technology"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Profile created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile/show/{id}": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Show a profile",
                "description": "Endpoint to retrieve a user profile by ID.",
                "operationId": "showProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the profile to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the profile",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "birthday": {
                                            "description": "Birth date for the user",
                                            "type": "string",
                                            "format": "date",
                                            "example": "2006-06-06"
                                        },
                                        "place": {
                                            "description": "Place address of user",
                                            "type": "string",
                                            "example": "Pursat province"
                                        },
                                        "bio": {
                                            "description": "Biography or description of the user",
                                            "type": "string",
                                            "example": "Passionate about coding and technology"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Profile not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile/update/{id}": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Update a profile",
                "description": "Endpoint to update an existing user profile.",
                "operationId": "updateProfile",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the profile to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "birthday": {
                                        "description": "New birth date for the user",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2006-06-06"
                                    },
                                    "place": {
                                        "description": "New place address of user",
                                        "type": "string",
                                        "example": "Pursat province"
                                    },
                                    "bio": {
                                        "description": "New biography or description of the user",
                                        "type": "string",
                                        "example": "Updated biography about coding and technology"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Profile not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Login user",
                "operationId": "2dd578ff7aba2721293dac66833b27d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login success"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get current user details",
                "operationId": "39adb19a53b45ea9e2410f04b00b87ec",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "john.doe@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "operationId": "0903f2e0df1a8857bee538fc055417f0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logout user",
                "operationId": "68a6108af04af5e3bc1ea68a6c6f1299",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/forgot-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Forgot password",
                "operationId": "da27e3923ff357f8610f31cf2cb83224",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "passwords.sent"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/confirm-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Confirm code for password reset",
                "operationId": "1550ab33bd25cffb3c762a8ad083a652",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "confirm_code"
                                ],
                                "properties": {
                                    "confirm_code": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Code confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Code not matched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Reset password",
                "operationId": "7703a82fcc6647515895149f640b8722",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "new_password",
                                    "confirm_password"
                                ],
                                "properties": {
                                    "new_password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    },
                                    "confirm_password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your password has been reset"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Password not matched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}